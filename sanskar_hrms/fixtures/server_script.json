[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Delete",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-19 12:44:14.828947",
  "module": "Sanskar HRMS",
  "name": "Change Job Applicant status when interview is deleted",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Interview",
  "script": "# try:\ninterview_exists = frappe.db.exists(\"Interview\", {\"job_applicant\": doc.job_applicant, \"docstatus\": [\"!=\", 2]})\n\n# frappe.msgprint(str(interview_exists))\n\nif interview_exists:\n    job_applicant = frappe.db.get_value('Interview',interview_exists,['job_applicant'])\n    prev_status = frappe.db.get_value('Interview',interview_exists,['status'])\n    prev_round = frappe.db.get_value('Interview',interview_exists,['interview_round'])\n    \n    prev_status_string = f\"{prev_round} - {prev_status}\"\n    \n    frappe.db.set_value('Job Applicant', job_applicant, 'status', prev_status_string)\n    frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_round', prev_round)\n    frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_status', prev_status) \n    \n\nelse:\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', 'Telephonic Round - Approved by HR')\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', 'Telephonic Round')\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_status', 'Approved by HR')\n        \n# except Exception as e:\n#     # Code to handle any other exception\n#     pass",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-19 15:46:34.935323",
  "module": "Sanskar HRMS",
  "name": "Update Job Applicant Status",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Job Applicant",
  "script": "inter_round = doc.custom_interview_round\nstandard_round = ['Open', 'Shortlisted', 'Hold']\n\nif inter_round in standard_round:\n    frappe.db.set_value('Job Applicant', doc.name, 'status', inter_round)\n    doc.reload()\n\nelse:\n    job_applicant_status = f\"{doc.custom_interview_round} - {doc.custom_interview_status}\"\n    # frappe.msgprint(f\"{interview_round}-{interview_status}  {job_applicant}\")\n    if doc.custom_interview_round == 'Telephonic Round':\n        frappe.db.set_value('Job Applicant', doc.name, 'status', job_applicant_status)\n        doc.reload()\n    # frappe.msgprint(f\"{job_applicant_status}\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "mail to hr",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-19 15:46:56.151506",
  "module": "Sanskar HRMS",
  "name": "New Job Applicant Mail to HR",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "user_name = frappe.form_dict['current_user']\njob_applicant = frappe.form_dict['job_applicant']\njob_title = frappe.form_dict['job_title']\nemail_id = frappe.form_dict['email_id']\nphone_number = frappe.form_dict['phone_number']\ndoc_link = frappe.form_dict['link']\n\n\n\n\nemployee = frappe.db.get_value('Employee', {'user_id': user_name}, ['reports_to'])\n\nsnr_employee = frappe.db.get_value('Employee', employee, ['user_id'], as_dict=1)\nmail_subject = f\"Applicant Approval - {job_applicant}\"\n\n\nfrappe.sendmail(\n    recipients = snr_employee.user_id,\n    subject=mail_subject,\n    template = 'approval_to_hr',\n    args = dict(\n        job_applicant = job_applicant,\n        job_title = job_title,\n        email_id = email_id,\n        phone_number = phone_number,\n        doc_link = doc_link\n        \n        )\n)\n\nfrappe.response['user_name'] = user_name\n# frappe.response['employee_id'] = employee.user_id\nfrappe.response['reports_to'] = employee\nfrappe.response['snr_employee'] = snr_employee.user_id\nfrappe.response['job_applicant'] = job_applicant\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-19 12:44:14.857905",
  "module": "Sanskar HRMS",
  "name": "Job Applicant status update on job offer",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Job Offer",
  "script": "\nif doc.status == \"Accepted\" or doc.status == \"Rejected\":\n        frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', doc.status)\n        frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', doc.status)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-19 12:44:14.842782",
  "module": "Sanskar HRMS",
  "name": "Update Job Applicant status when job offer is cancelled",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Job Offer",
  "script": "frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', 'Final Round - Cleared')\nfrappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', 'Final Round')\nfrappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_status', 'Cleared')\n\n\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-19 12:44:14.814673",
  "module": "Sanskar HRMS",
  "name": "Change job applicant status when interview is cancelled",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Interview",
  "script": "# try:\ninterview_exists = frappe.db.exists(\"Interview\", {\"job_applicant\": doc.job_applicant, \"docstatus\": [\"!=\", 2]})\n\n# frappe.msgprint(str(interview_exists))\n\nif interview_exists:\n    job_applicant = frappe.db.get_value('Interview',interview_exists,['job_applicant'])\n    prev_status = frappe.db.get_value('Interview',interview_exists,['status'])\n    prev_round = frappe.db.get_value('Interview',interview_exists,['interview_round'])\n    \n    prev_status_string = f\"{prev_round} - {prev_status}\"\n    \n    frappe.db.set_value('Job Applicant', job_applicant, 'status', prev_status_string)\n    frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_round', prev_round)\n    frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_status', prev_status) \n    \n\nelse:\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'status', 'Telephonic Round - Approved by HR')\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_round', 'Telephonic Round')\n    frappe.db.set_value('Job Applicant', doc.job_applicant, 'custom_interview_status', 'Approved by HR')\n        \n# except Exception as e:\n#     # Code to handle any other exception\n#     pass",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-19 12:44:14.800790",
  "module": "Sanskar HRMS",
  "name": "Update Job applicant status When interview is saved",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Interview",
  "script": "status = doc.status\ninterview_round = doc.interview_round\njob_applicant = doc.job_applicant\n\n\nif status in ['Scheduled', 'Rescheduled', 'Task Given', 'Not Appeared']:\n    \n    status_string = f\"{interview_round} - {status}\"\n    \n    frappe.db.set_value('Job Applicant', job_applicant, 'status', status_string)\n    frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_round', interview_round)\n    frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_status', status)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-19 12:44:14.788502",
  "module": "Sanskar HRMS",
  "name": "Update Job applicant status When interview is submitted",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Interview",
  "script": "status = doc.status\ninterview_round = doc.interview_round\njob_applicant = doc.job_applicant\n\n\nif status in ['Cleared', 'Rejected']:\n    \n    status_string = f\"{interview_round} - {status}\"\n    \n    frappe.db.set_value('Job Applicant', job_applicant, 'status', status_string)\n    frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_round', interview_round)\n    frappe.db.set_value('Job Applicant', job_applicant, 'custom_interview_status', status)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-20 16:50:10.564138",
  "module": "Sanskar HRMS",
  "name": "Auto update job opening status as 'Closed' based on the hired vacancy",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Job Offer",
  "script": "if doc.status == 'Accepted':\n    opening = doc.custom_job_opening\n    \n    vacancy = frappe.db.get_value('Job Opening', opening, 'planned_vacancies')\n    staffing_plan = frappe.db.get_value('Job Opening', opening, 'staffing_plan')\n    \n    hired_vacancy = frappe.db.count('Job Offer', {'docstatus':1, 'status': 'Accepted', 'custom_job_opening': opening})\n    \n    frappe.db.set_value('Job Opening', opening, 'custom_hired_vacancies', hired_vacancy)\n    \n    if vacancy==hired_vacancy:\n        \n        closing_date = frappe.utils.today()\n        frappe.db.set_value('Job Opening', opening, 'status', 'Closed')\n        frappe.db.set_value('Job Opening', opening, 'closed_on', closing_date)\n        \n    \n    \n    # Check status of job opening of particular staffing plan\n    data = frappe.db.get_list('Job Opening',\n    filters={\n        'staffing_plan': staffing_plan,\n    },\n    fields=['name', 'status'], as_list=True)\n\n    # Initialize a flag to track if all job openings are closed\n    all_closed = True\n    \n    # Iterate through the job openings\n    for x in data:\n        name = x[0]\n        status = x[1]\n        \n       \n        \n        # If any job opening is not closed, set the flag to False\n        if status != 'Closed':\n            all_closed = False\n    \n    # If all job openings are closed, print a message\n    if all_closed:\n        \n        frappe.db.set_value('Staffing Plan', staffing_plan, 'custom_is_active', 0)\n    else:\n        pass\n        # frappe.msgprint(\"Not all job openings for the staffing plan are closed.\")\n\n    ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-19 12:44:14.772309",
  "module": "Sanskar HRMS",
  "name": "Update Hired vacancy in Job Opening when job offer is cancelled",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Job Offer",
  "script": "if doc.status=='Accepted':\n    opening = doc.custom_job_opening\n    vacancy = frappe.db.get_value('Job Opening', opening, 'planned_vacancies')\n    \n    new_vacancy = vacancy-1\n    \n    frappe.db.set_value('Job Opening', opening, 'custom_hired_vacancies', new_vacancy)\n    frappe.db.set_value('Job Opening', opening, 'status', 'Open')\n\n    ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "fetch_staffing_plan",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-19 12:44:14.733958",
  "module": "Sanskar HRMS",
  "name": "Fetch staffing plan based on designation in job opening",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "desi = frappe.form_dict[\"designation\"]\n\nresult = []\nplan = frappe.db.get_all(\n            \"Staffing Plan Detail\",\n            filters={\n                \"designation\": desi\n            },\n            fields=[\"parent\"]\n        )\n\nfor record in plan:\n    staffing_plan = record['parent']\n  \n    \n    is_active = frappe.db.get_value('Staffing Plan', staffing_plan, 'custom_is_active')\n    \n    if is_active==1:\n        result.append(staffing_plan)\n    \n\n    \nfrappe.response[\"message\"] = result\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-19 12:44:14.714502",
  "module": "Sanskar HRMS",
  "name": "Do not allow to create job offer against closed - job opening",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Job Offer",
  "script": "opening = doc.custom_job_opening\n\nopening_status = frappe.db.get_value('Job Opening', opening, 'status')\n\nif opening_status=='Closed':\n    opening_link = frappe.utils.get_link_to_form(\"Job Opening\", opening)\n    error_message = 'Job Opening is already closed: ' + opening_link\n    frappe.throw(error_message)\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-03-19 12:44:14.684301",
  "module": "Sanskar HRMS",
  "name": "Do not allow to create interview against closed - job opening",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Interview",
  "script": "opening = doc.job_opening\n\nopening_status = frappe.db.get_value('Job Opening', opening, 'status')\n\nif opening_status=='Closed':\n    opening_link = frappe.utils.get_link_to_form(\"Job Opening\", opening)\n    error_message = 'Cannot schedule a interview against a closed Job Opening: ' + opening_link\n    frappe.throw(error_message)\n",
  "script_type": "DocType Event"
 }
]